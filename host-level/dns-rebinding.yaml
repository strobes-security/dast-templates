id: dns-rebinding
info:
  name: DNS Rebinding Attack
  author: ricardomaia
  severity: unknown
  description: The DNS Rebinding Attack is a technique that allows an attacker to
    bypass the Same-Origin Policy (SOP) restrictions imposed by web browsers, enabling
    unauthorized access to internal network resources. This vulnerability arises when
    a web application fails to properly validate the origin of incoming requests,
    allowing an attacker to bind a malicious domain to the target's internal IP address.
    By doing so, the attacker can impersonate legitimate users and steal sensitive
    data, perform lateral movement within the network, or even execute arbitrary code
    on the target system by exploiting vulnerabilities in internal applications. To
    mitigate this vulnerability, organizations should implement a combination of server-side
    and client-side security measures, such as strict origin validation, access controls,
    and user education, to prevent unauthorized access to internal resources and protect
    against the potential consequences of a successful DNS Rebinding Attack.
  reference:
  - https://capec.mitre.org/data/definitions/275.html
  - https://payatu.com/blog/dns-rebinding/
  - https://heimdalsecurity.com/blog/dns-rebinding/
  metadata:
    max-request: 2
  tags: redirect,dns,network
  impact: '- Gain unauthorized access to internal network resources by bypassing same-origin
    policy restrictions

    - Steal sensitive data from internal web applications or servers by impersonating
    legitimate users

    - Perform lateral movement and further compromise the internal network by accessing
    additional systems

    - Conduct denial-of-service attacks against internal services by flooding them
    with requests from the rebinded domain

    - Escalate privileges and execute arbitrary code on the target system by exploiting
    vulnerabilities in internal applications'
  remediation: 'To address the DNS Rebinding Attack vulnerability, organizations should
    implement a combination of server-side and client-side security measures. On the
    server-side, web applications should validate the origin of incoming requests
    and reject any requests that originate from unauthorized domains or IP addresses.
    Additionally, web servers should be configured to restrict access to internal
    network resources, and any sensitive data or functionality should be protected
    behind strict access controls. On the client-side, web browsers can be configured
    to block or warn users about potential DNS Rebinding attacks, and users should
    be educated about the risks of accessing internal network resources from untrusted
    domains.


    Specific steps developers can take to mitigate the DNS Rebinding Attack vulnerability
    include:


    - Implement strict origin validation on the server-side to ensure that incoming
    requests originate from authorized domains or IP addresses.

    - Restrict access to sensitive internal resources and functionality by implementing
    robust access controls and authentication mechanisms.

    - Configure web servers to enforce the Same-Origin Policy and reject requests
    that violate this policy.

    - Implement Content Security Policy (CSP) rules to prevent the execution of unauthorized
    scripts or the inclusion of external resources.

    - Educate users about the risks of DNS Rebinding attacks and encourage them to
    be cautious when accessing internal network resources from untrusted domains.'
dns:
- name: '{{FQDN}}'
  type: A
  matchers:
  - type: regex
    part: answer
    regex:
    - IN\s+A\s+(127\.0\.0\.1|10\.\d{1,3}\.\d{1,3}\.\d{1,3}|172\.(1[6-9]|2\d|3[0-1])\.\d{1,3}\.\d{1,3}|192\.168\.\d{1,3}\.\d{1,3})$
  extractors:
  - type: regex
    part: answer
    name: IPv4
    group: 1
    regex:
    - IN\s+A\s+(127\.0\.0\.1|10\.\d{1,3}\.\d{1,3}\.\d{1,3}|172\.(1[6-9]|2\d|3[0-1])\.\d{1,3}\.\d{1,3}|192\.168\.\d{1,3}\.\d{1,3})
- name: '{{FQDN}}'
  type: AAAA
  matchers:
  - type: regex
    part: answer
    regex:
    - IN\s+AAAA\s+(fd[0-9a-fA-F]{2}(:[0-9a-fA-F]{0,4}){0,7})
  extractors:
  - type: regex
    part: answer
    name: IPv6_ULA
    group: 1
    regex:
    - IN\s+AAAA\s+(fd[0-9a-fA-F]{2}(:[0-9a-fA-F]{0,4}){0,7})
