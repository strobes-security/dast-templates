id: open-redirect-bypass
info:
  name: Open Redirect Bypass
  author: ritikchaddha
  severity: medium
  metadata:
    max-request: 1
  tags: redirect,dast
  description: The "Open Redirect Bypass" vulnerability is a critical security flaw
    that allows an attacker to bypass the safeguards implemented to protect against
    traditional open redirect attacks. This vulnerability occurs when an application
    fails to properly validate and sanitize user-supplied input used in redirect URLs,
    enabling an adversary to craft malicious links that appear to originate from a
    trusted domain. Once exploited, the attacker can redirect users to arbitrary websites,
    potentially leading to the compromise of sensitive information, the distribution
    of malware, or the facilitation of phishing campaigns. This vulnerability is particularly
    concerning as it can undermine the trust users place in an organization's online
    presence, ultimately jeopardizing the security and reputation of the affected
    system.
  impact: '- Compromise user trust and redirect them to malicious websites, potentially
    leading to the theft of sensitive information or the distribution of malware.

    - Facilitate phishing attacks by creating links that appear to originate from
    a trusted domain, tricking users into divulging their credentials.

    - Bypass security measures implemented to protect against open redirect vulnerabilities,
    allowing the attacker to execute more sophisticated attacks.

    - Leverage the trusted reputation of the affected system to launch attacks on
    a larger scale, potentially affecting a broader user base.

    - Undermine the overall security and reputation of the organization, as the successful
    exploitation of this vulnerability can severely damage the trust users have in
    the organization''s online presence.'
  remediation: 'To address the "Open Redirect Bypass" vulnerability, it is essential
    to implement robust input validation and sanitization measures throughout the
    application. Developers should ensure that all user-supplied input used in redirect
    URLs is thoroughly validated and sanitized to prevent the injection of malicious
    content. Additionally, it is crucial to implement a comprehensive list of trusted
    redirect destinations and enforce strict adherence to these approved targets,
    effectively blocking the ability of attackers to redirect users to arbitrary websites.


    - Implement strict input validation and sanitization for all user-supplied data
    used in redirect URLs, ensuring that any potentially malicious content is removed
    or neutralized.

    - Maintain a comprehensive list of trusted redirect destinations and enforce strict
    adherence to these approved targets, preventing the redirection of users to untrusted
    or malicious websites.

    - Regularly review and update the list of trusted redirect destinations to ensure
    that it remains current and aligned with the application''s security requirements.

    - Implement monitoring and logging mechanisms to detect and alert on any attempts
    to redirect users to untrusted or unauthorized destinations, enabling the timely
    identification and remediation of potential attacks.

    - Educate and train developers on the risks associated with open redirect vulnerabilities
    and the importance of implementing robust input validation and sanitization practices.'
http:
- pre-condition:
  - type: dsl
    dsl:
    - method == "GET"
    - method == "POST"
  payloads:
    redirect:
    - '{{Hostname}}.oast.me'
    - //oast.me
    - ////oast.me
    - https:oast.me
    - \/\/oast.me/
    - /\/oast.me/
    - "oast\u3002me"
    - //oast%E3%80%82me
    - //oast%00.me
    - '@oast.me/'
    - /\{{Hostname}}%40oast.me
    - '{{Hostname}}@oast.me/'
    - '{{RootURL}}/http://www.oast.me/'
    - '{{RootURL}}?http://www.oast.me/'
    - '%09/oast.me/'
    - '%5C%5Coast.me/%252e%252e%252f'
    - '%5Coast.me'
    - '%5coast.me/%2f%2e%2e'
    - '%5c{{RootURL}}oast.me/%2f%2e%2e'
    - ../oast.me
    - .oast.me
    - /%5coast.me
    - ////\;@oast.me
    - ///oast.me
    - ///oast.me/%2f%2e%2e
    - ///oast.me@//
    - ///{{RootURL}}oast.me/%2f%2e%2e
    - //;@oast.me
    - //\/oast.me/
    - //\@oast.me
    - //\oast.me
    - //\toast.me/
    - //oast.me/%2F..
    - //oast.me//
    - //%69%6e%74%65%72%61%63%74%2e%73%68
    - //oast.me@//
    - //oast.me\toast.me/
    - //https://oast.me@//
    - /<>//oast.me
    - /\/\/oast.me/
    - /\/oast.me
    - /\oast.me
    - /oast.me
    - /oast.me/%2F..
    - /oast.me/
    - /oast.me/..;/css
    - /https:oast.me
    - /{{RootURL}}oast.me/
    - "/\u3031oast.me"
    - "/\u3035oast.me"
    - "/\u309Doast.me"
    - "/\u30FCoast.me"
    - "/\uFF70oast.me"
    - <>//oast.me
    - '@oast.me'
    - '@https://oast.me'
    - \/\/oast.me/
    - oast%E3%80%82me
    - oast.me
    - oast.me/
    - oast.me//
    - oast.me;@
    - https%3a%2f%2foast.me%2f
    - https:%0a%0doast.me
    - https://%0a%0doast.me
    - https://%09/oast.me
    - https://%2f%2f.oast.me/
    - https://%3F.oast.me/
    - https://%5c%5c.oast.me/
    - https://%5coast.me@
    - https://%23.oast.me/
    - https://.oast.me
    - https://////oast.me
    - https:///oast.me
    - https:///oast.me/%2e%2e
    - https:///oast.me/%2f%2e%2e
    - https:///oast.me@oast.me/%2e%2e
    - https:///oast.me@oast.me/%2f%2e%2e
    - https://:80#@oast.me/
    - https://:80?@oast.me/
    - https://:@\@oast.me
    - https://:@oast.me\@oast.me
    - https://;@oast.me
    - https://\toast.me/
    - https://oast.me/oast.me
    - https://oast.me/https://oast.me/
    - https://www.\.oast.me
    - https:/\/\oast.me
    - https:/\oast.me
    - https:/oast.me
    - https:oast.me
    - '{{RootURL}}oast.me'
    - "\u3031oast.me"
    - "\u3035oast.me"
    - "\u309Doast.me"
    - "\u30FCoast.me"
    - "\uFF70oast.me"
    - redirect/oast.me
    - cgi-bin/redirect.cgi?oast.me
    - out?oast.me
    - login?to=http://oast.me
    - '#/oast.me'
    - '%0a/oast.me/'
    - '%0d/oast.me/'
    - '%00/oast.me/'
  fuzzing:
  - part: query
    mode: single
    keys:
    - AuthState
    - URL
    - _url
    - callback
    - checkout
    - checkout_url
    - content
    - continue
    - continueTo
    - counturl
    - data
    - dest
    - dest_url
    - destination
    - dir
    - document
    - domain
    - done
    - download
    - feed
    - file
    - file_name
    - file_url
    - folder
    - folder_url
    - forward
    - from_url
    - go
    - goto
    - host
    - html
    - http
    - https
    - image
    - image_src
    - image_url
    - imageurl
    - img
    - img_url
    - include
    - langTo
    - load_file
    - load_url
    - login_to
    - login_url
    - logout
    - media
    - navigation
    - next
    - next_page
    - open
    - out
    - page
    - page_url
    - pageurl
    - path
    - picture
    - port
    - proxy
    - r
    - r2
    - redir
    - redirect
    - redirectUri
    - redirectUrl
    - redirect_to
    - redirect_uri
    - redirect_url
    - reference
    - referrer
    - req
    - request
    - ret
    - retUrl
    - return
    - returnTo
    - return_path
    - return_to
    - return_url
    - rt
    - rurl
    - show
    - site
    - source
    - src
    - target
    - to
    - u
    - uri
    - url
    - val
    - validate
    - view
    - window
    - back
    - cgi
    - follow
    - home
    - jump
    - link
    - location
    - menu
    - move
    - nav
    - orig_url
    - out_url
    - query
    - auth
    - callback_url
    - confirm_url
    - destination_url
    - domain_url
    - entry
    - exit
    - forward_url
    - go_to
    - goto_url
    - home_url
    - image_link
    - load
    - logout_url
    - nav_to
    - origin
    - page_link
    - redirect_link
    - ref
    - referrer_url
    - return_link
    - return_to_url
    - source_url
    - target_url
    - to_url
    - validate_url
    - DirectTo
    - relay
    fuzz:
    - '{{redirect}}'
  - part: query
    mode: single
    values:
    - https?://
    fuzz:
    - '{{redirect}}'
  - part: path
    mode: single
    values:
    - https?://
    fuzz:
    - '{{redirect}}'
  - part: body
    mode: single
    values:
    - https?://
    fuzz:
    - '{{redirect}}'
  - part: header
    mode: single
    values:
    - https?://
    fuzz:
    - '{{redirect}}'
  - part: cookie
    mode: single
    values:
    - https?://
    fuzz:
    - '{{redirect}}'
  stop-at-first-match: true
  matchers-condition: and
  matchers:
  - type: regex
    part: header
    regex:
    - (?m)^(?:Location\s*?:\s*?)(?:https?:\/\/|\/\/|\/\\\\|\/\\)(?:[a-zA-Z0-9\-_\.@]*)oast\.me\/?(\/|[^.].*)?$
  - type: status
    status:
    - 301
    - 302
    - 307
