id: zip-backup-files
info:
  name: Compressed Backup File - Detect
  author: toufik-airane,dwisiswant0,ffffffff0x,pwnhxl,mastercho
  severity: medium
  description: The "Compressed Backup File - Detect" vulnerability refers to the potential
    risk associated with the existence of unencrypted or unsecured compressed backup
    files within an organization's infrastructure. These backup files may contain
    sensitive data, such as confidential information, system configurations, or user
    credentials, which could be accessed by an unauthorized individual. An attacker
    could gain unauthorized access to the backup files, potentially restoring them
    on a separate system and using the extracted data for further malicious activities,
    such as lateral movement, privilege escalation, or data exfiltration. Additionally,
    the availability of the system could be compromised if the attacker were to delete
    or modify the backup files, rendering the organization unable to recover from
    a system failure or data loss incident. Furthermore, the attacker could use the
    backup files to gather intelligence about the target organization's infrastructure,
    applications, and security controls, which could be leveraged in subsequent attacks.
    If the backup files contain unencrypted passwords or other sensitive information,
    the attacker could use this data to gain unauthorized access to other systems
    or accounts within the organization.
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N
    cvss-score: 5.3
    cwe-id: CWE-200
  metadata:
    max-request: 1305
  tags: exposure,backup
  impact: '- An attacker could gain unauthorized access to sensitive data stored within
    the compressed backup files, including confidential information, system configurations,
    or user credentials.

    - The attacker could potentially restore the backup files on a separate system
    and use the extracted data for further attacks, such as lateral movement, privilege
    escalation, or data exfiltration.

    - The availability of the system could be compromised if the attacker were to
    delete or modify the backup files, rendering the organization unable to recover
    from a system failure or data loss incident.

    - The attacker could use the backup files to gather intelligence about the target
    organization''s infrastructure, applications, and security controls, which could
    be leveraged in subsequent attacks.

    - If the backup files contain unencrypted passwords or other sensitive information,
    the attacker could use this data to gain unauthorized access to other systems
    or accounts within the organization.'
  remediation: 'To address the "Compressed Backup File - Detect" vulnerability, organizations
    should implement a comprehensive backup and recovery strategy that ensures the
    security and integrity of backup data. The following steps should be taken:


    - Encrypt all backup files using strong encryption algorithms and secure key management
    practices to protect the confidentiality of sensitive data.

    - Implement access controls and permissions to limit the access to backup files,
    ensuring that only authorized personnel can access and manage the backup data.

    - Regularly review and monitor the backup process, including the integrity of
    the backup files, to detect and address any anomalies or unauthorized access attempts.

    - Consider implementing multi-factor authentication or other strong authentication
    mechanisms to further secure the backup process and prevent unauthorized access.

    - Develop a comprehensive incident response plan that addresses the steps to be
    taken in the event of a security breach or data loss incident involving the backup
    files.'
http:
- method: GET
  path:
  - '{{BaseURL}}/{{FILENAME}}.{{EXT}}'
  attack: clusterbomb
  payloads:
    FILENAME:
    - '{{FQDN}}'
    - '{{RDN}}'
    - '{{DN}}'
    - '{{SD}}'
    - '{{date_time(''%Y'')}}'
    - ROOT
    - wwwroot
    - htdocs
    - www
    - html
    - web
    - webapps
    - public
    - public_html
    - uploads
    - website
    - api
    - test
    - app
    - backup
    - backup_1
    - backup_2
    - backup_3
    - backup_4
    - backups
    - bin
    - temp
    - bak
    - db
    - sql
    - dump
    - database
    - Release
    - inetpub
    - package
    - tmp
    - db
    - data
    - ftp
    - output
    - admin
    - upload
    - src
    - conf/conf
    - old
    EXT:
    - tar
    - 7z
    - bz2
    - gz
    - lz
    - rar
    - tar.gz
    - tar.bz2
    - xz
    - zip
    - z
    - Z
    - tar.z
    - tgz
    - db
    - jar
    - sqlite
    - sqlitedb
    - sql.7z
    - sql.bz2
    - sql.gz
    - sql.lz
    - sql.rar
    - sql.tar.gz
    - sql.xz
    - sql.zip
    - sql.z
    - sql.tar.z
    - war
  max-size: 500
  matchers-condition: and
  matchers:
  - type: binary
    binary:
    - '7573746172202000'
    - '7573746172003030'
    - 377ABCAF271C
    - '314159265359'
    - 53514c69746520666f726d6174203300
    - 1f8b
    - 526172211A0700
    - 526172211A070100
    - FD377A585A0000
    - 1F9D
    - 1FA0
    - 4C5A4950
    - 504B0304
    condition: or
    part: body
  - type: regex
    regex:
    - application/[-\w.]+
    part: header
  - type: status
    status:
    - 200
