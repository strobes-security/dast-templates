id: graphql-field-suggestion
info:
  name: GraphQL Field Suggestion Information Disclosure
  author: Dolev Farhi
  severity: info
  description: The "GraphQL Field Suggestion Information Disclosure" vulnerability
    allows attackers to gain valuable information about the structure of the GraphQL
    schema, including the available types, fields, and their relationships. Even if
    the GraphQL API's introspection feature is disabled, the field suggestion functionality
    can be utilized to enumerate the existing fields and operations. This information
    disclosure can enable attackers to refine their attack strategies, potentially
    uncover sensitive data or functionality, and plan more sophisticated attacks,
    such as constructing targeted queries to extract additional data or perform unauthorized
    actions. The disclosed information could lead to a further compromise of the application,
    as the attacker gains a better understanding of the system's internals and potential
    attack vectors. To address this vulnerability, it is essential to disable the
    field suggestion feature in the GraphQL backend, which will prevent attackers
    from leveraging this functionality to gather information about the schema, even
    if introspection is disabled. By removing this attack surface, the risk of unauthorized
    access and further compromise of the application can be significantly reduced.
  reference:
  - https://github.com/webonyx/graphql-php/issues/454
  - https://github.com/dolevf/Damn-Vulnerable-GraphQL-Application
  - https://cheatsheetseries.owasp.org/cheatsheets/GraphQL_Cheat_Sheet.html
  - https://graphql.security
  metadata:
    max-request: 2
  tags: graphql,misconfig
  impact: '- The attacker could gain information about the structure of the GraphQL
    schema, including the available types, fields, and their relationships.

    - The attacker could use the field suggestion feature to enumerate the existing
    fields and operations in the GraphQL API, even if introspection is disabled.

    - The attacker could leverage the information disclosed through the field suggestion
    feature to refine their attack and potentially uncover sensitive data or functionality.

    - The attacker could use the disclosed information to plan more sophisticated
    attacks, such as constructing targeted queries to extract additional data or perform
    unauthorized actions.

    - The information disclosure could lead to a further compromise of the application,
    as the attacker gains a better understanding of the system''s internals and potential
    attack vectors.'
  remediation: 'To address the "GraphQL Field Suggestion Information Disclosure" vulnerability,
    it is essential to disable the field suggestion feature in your GraphQL backend.
    This will prevent attackers from leveraging the field suggestion functionality
    to gather information about the schema, even if introspection is disabled. By
    removing this attack surface, you can significantly reduce the risk of unauthorized
    access and further compromise of your application.


    - Locate the configuration settings for your GraphQL backend and identify the
    option to enable or disable the field suggestion feature.

    - Disable the field suggestion feature by setting the appropriate configuration
    parameter or flag.

    - Ensure that the field suggestion is disabled in both development and production
    environments to maintain consistent security across all deployments.

    - Review your application''s logging and monitoring systems to detect any attempts
    to exploit the field suggestion feature and respond accordingly.

    - Document the decision to disable the field suggestion feature and update your
    application''s security documentation to maintain a clear record of the implemented
    remediation.'
http:
- raw:
  - 'POST /graphql HTTP/1.1

    Host: {{Hostname}}

    Content-Type: application/json


    {"query":"query {\n  __schema {\n directive\n }\n}","variables":null}

    '
  - 'POST /api/graphql HTTP/1.1

    Host: {{Hostname}}

    Content-Type: application/json


    {"query":"query {\n  __schema {\n directive\n }\n}","variables":null}

    '
  stop-at-first-match: true
  matchers-condition: and
  matchers:
  - type: word
    part: body
    words:
    - Did you mean
  - type: word
    part: header
    words:
    - application/json
