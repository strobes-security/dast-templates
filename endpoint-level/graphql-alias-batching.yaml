id: graphql-alias-batching
info:
  name: GraphQL Alias-based Batching
  author: Dolev Farhi
  severity: info
  description: 'GraphQL supports aliasing of multiple sub-queries into a single queries.
    This allows users to request multiple objects or multiple instances of objects
    efficiently.

    However, an attacker can leverage this feature to evade many security measures,
    including rate limit.

    '
  remediation: 'To address the "GraphQL Alias-based Batching" vulnerability, developers
    should implement strict input validation and rate limiting measures to prevent
    attackers from exploiting the alias feature. This can be achieved by:


    - Implementing strict input validation to ensure that all incoming GraphQL queries
    are well-formed and do not contain any malicious or unexpected constructs, such
    as excessive aliasing or nested queries.

    - Enforcing rate limiting on the number of GraphQL requests a client can make
    within a specific time frame, and ensuring that this limit applies to the overall
    request size, not just the number of individual queries.

    - Monitoring and analyzing GraphQL query patterns to detect and block any suspicious
    or anomalous activity, such as an unusually large number of aliased queries or
    requests that attempt to retrieve sensitive data.

    - Considering the use of a GraphQL-specific firewall or proxy to inspect and validate
    incoming GraphQL requests before forwarding them to the server.

    - Implementing robust logging and auditing mechanisms to track and analyze GraphQL
    usage patterns, which can help identify and mitigate potential abuse of the alias
    feature.'
  reference:
  - https://github.com/dolevf/Damn-Vulnerable-GraphQL-Application
  - https://cheatsheetseries.owasp.org/cheatsheets/GraphQL_Cheat_Sheet.html
  - https://graphql.security/
  - https://stackoverflow.com/questions/62421352/graphql-difference-between-using-alias-versus-multiple-query-objects-when-doin
  classification:
    cpe: cpe:2.3:a:graphql:playground:*:*:*:*:node.js:*:*:*
  metadata:
    max-request: 2
    product: playground
    vendor: graphql
  tags: graphql,misconfig
  impact: '- An attacker can bypass rate limiting and other security measures by abusing
    the GraphQL alias feature to execute multiple malicious queries within a single
    request.

    - By leveraging aliasing, an attacker can retrieve sensitive data that they would
    not normally have access to, such as user information, financial data, or other
    protected resources.

    - Attackers can launch denial-of-service (DoS) attacks by sending a large number
    of aliased queries, overwhelming the server and disrupting the service.

    - The use of aliased queries can make it more difficult to detect and monitor
    malicious activity, as the individual queries are obscured within the larger request.

    - Attackers can use aliasing to perform unauthorized actions, such as modifying
    or deleting data, by executing multiple mutation operations within a single request.'
variables:
  str: '{{to_lower(rand_text_alpha(5))}}'
http:
- raw:
  - 'POST /graphql HTTP/1.1

    Host: {{Hostname}}

    Content-Type: application/json


    {"query":"query {\n {{str}}1:__typename \n {{str}}2:__typename \n {{str}}3:__typename
    \n {{str}}4:__typename \n {{str}}5:__typename \n {{str}}6:__typename \n }"}

    '
  - 'POST /api/graphql HTTP/1.1

    Host: {{Hostname}}

    Content-Type: application/json


    {"query":"query {\n {{str}}1:__typename \n {{str}}2:__typename \n {{str}}3:__typename
    \n {{str}}4:__typename \n {{str}}5:__typename \n {{str}}6:__typename \n }"}

    '
  stop-at-first-match: true
  matchers-condition: and
  matchers:
  - type: word
    part: body
    words:
    - '"data":'
    - '"{{str}}1":'
    - '"{{str}}6":'
    condition: and
  - type: word
    part: header
    words:
    - application/json
